# configs/model/dhumus.yaml

# dHUMUSNet 클래스를 지정합니다.
_target_: utils.model.dHUMUS.dHUMUSNet

# === 모델 아키텍처 하이퍼파라미터 ===
# 논문의 핵심 파라미터들을 여기서 조정합니다.

# 전체 Cascade 수 (unrolled-optimization 반복 횟수)
# VRAM과 계산량에 가장 큰 영향을 줍니다. 8GB 환경에서는 4~6으로 시작하는 것을 권장합니다.
num_cascades: 5

# HMUST 블록 내부 Conv 레이어의 기본 채널 수
chans: 32

# MUST (Multi-scale Swin Transformer) 내부 U-Net의 풀링(다운샘플링) 횟수
# 4로 설정하면 1x, 2x, 4x, 8x 스케일까지 처리합니다.
pools: 3 # 1, 2, 4 scales

# Swin Transformer 블록의 헤드 수
num_heads: 8

# Swin Transformer의 윈도우 크기
window_size: 6

# === 동적 스케일 선택 파라미터 (OSPN) ===
# OSPN(Optimal Scale Prediction Network) 관련 설정입니다.

# OSPN이 예측할 수 있는 스케일 후보 목록입니다.
# pools=3이면 [1, 2, 4]가 됩니다. pools 개수와 맞춰야 합니다.
scale_options: [1, 2, 4, 8]

# OSPN의 입력(Repetition Level) 계산에 사용할 Pixel-Unshuffle 계수 목록
pu_factors: [2, 3, 4]

# OSPN 내부 RNN의 히든 사이즈
rnn_hidden_size: 128

# === 민감도 맵 추정 네트워크 파라미터 ===
# VarNet과 동일한 Sensitivity Estimator를 사용합니다.
sens_chans: 8
sens_pools: 4

# === 메모리 최적화 ===
# Activation Checkpointing 사용 여부. 메모리가 부족할 때 VRAM 사용량을 크게 줄여줍니다.
# 8GB 환경에서는 반드시 true로 설정하는 것을 권장합니다.
use_checkpoint: true


# batch 1에 5MB