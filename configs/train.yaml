# train.yaml

defaults:
  - _self_
  - model: fivarnet   # 모델 설정  varnet_sweep2 or fivarnet
  - data: local_sangwonDesktop         # 데이터 경로 설정
  - LRscheduler: ExponentialLR        # ⬅️  추가 - https://gaussian37.github.io/dl-pytorch-lr_scheduler/참고
  - LossFunction: SSIM+L1
  - training: base_me          # base or vessl_vramMin or base_sw or base_me
  - early_stop: none    # 조기종료 기능 : early_stop or none
  - evaluation: leaderboard
  - optimizer: nadam          # ⬅️ 새로 추가  
  - aug: mraugment    # ⬅️ 새로 추가 none or mraugment
  - centerCropPadding: crop_kspace # crop_zero or crop_noise or crop_kspace
  - maskDuplicate: acc4_acc8       # acc4_acc8 or none
  - maskAugment: universal             # universal or basic or none 
  - collator: identity          # 또는 dynamicCompress or identity or identity_debug
  - compressor: scc  # ⬅️ 새로 추가       # gcc, scc, none
  - sampler: grouping          # 또는 grouping or identity

# === Data Preprocessing === -  Mask → Crop → Compress → Tensor
use_crop: false                  # spatial crop 사용 여부
crop_size: [384, 384]           # crop 할 (H, W) - 무조건 짝수로 지정
corner_size : 16

# === 공통 학습 하이퍼파라미터 ===
GPU_NUM: 0
batch_size: 1
val_batch_size: 5     # 검증 배치 크기 (추가)
num_epochs: ${max_epochs} # 실제 돌아가는 epoch
max_epochs : 30   # aug용 max epoch (domain train의 block training 때문에 넣음)
warmup_epochs : 3
lr: 1e-3
report_interval: 5000
seed: 430
num_workers: 4

exp_name : fivarnet(6,9,8)-crop(450,450)

# these three are *required* by utils/data/load_data.py → create_data_loaders
input_key:  kspace
target_key: image_label
max_key:    max

wandb:
  project: AMP_sweep
  entity: swpants05-seoul-national-university        # W&B 팀/계정
  use_wandb: true           # false 이면 모든 wandb 로그 함수가 noop
  max_vis_per_cat: 5        # epoch 마다 카테고리별 이미지 수 (0 → 안 올림)

  use_visLogging: true
  use_receptiveField: true
