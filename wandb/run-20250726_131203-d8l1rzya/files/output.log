Current cuda device:  0
[Hydra-visLogging]  True
[Hydra-receptiveField]  False
[Hydra-maskDuplicate] {'enable': True, '_target_': 'utils.data.duplicate_dataset.DuplicateMaskDataset', 'accel_cfgs': [{'accel': 4}, {'accel': 8}], 'bundle_path': '/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek//metaData/precomputed_masks.npz'}
[Hydra] training: accum_steps=2 checkpointing=False amp_enabled=True
[Hydra] grad_accum_scheduler 활성화 → milestones=[{'epoch': 0, 'steps': 2}, {'epoch': 5, 'steps': 10}, {'epoch': 25, 'steps': 16}]
[Hydra] grad_clip: enable=False max_norm=1.0 norm_type=2
[Hydra-eval] {'enable': False, 'stages': [{'epoch': 10, 'ssim': 0.9}, {'epoch': 20, 'ssim': 0.95}, {'epoch': 25, 'ssim': 0.96}]}
[Hydra-eval] early_enabled=False, stage_table={10: 0.9, 20: 0.95, 25: 0.96}
self._lksa_applied :  True
self._lksa_applied :  True
[Hydra-model] model_cfg={'_target_': 'utils.model.feature_varnet.FlexibleCascadeVarNet', 'variant': 'dlka', 'cascade_counts': [2, 4, 6], 'feature_chans': 9, 'unet_chans': 32, 'pools': 4, 'sens_chans': 8, 'sens_pools': 4, 'mask_center': True, 'kspace_mult_factor': 1000000.0, 'crop_size': 'none'}
[Hydra] loss_func ▶ SSIML1Loss(
  (ssim_base): SSIMLoss()
)
[Hydra] Optimizer ▶ NAdam
[Hydra] Scheduler ▶ <torch.optim.lr_scheduler.ExponentialLR object at 0x71f6f35baf50>
[DeepSpeed] use_deepspeed False
{'enable': False, 'config': {'train_micro_batch_size_per_gpu': 1, 'dist_init_required': False, 'optimizer': {'type': 'Adam', 'params': {'lr': 0.001, 'betas': [0.9, 0.999], 'eps': 1e-08, 'weight_decay': 0}}, 'zero_optimization': {'stage': 1, 'offload_optimizer': {'device': 'cpu'}}, 'fp16': {'enabled': False}, 'scheduler': {'type': 'WarmupCosineLR', 'params': {'warmup_min_ratio': 0.001, 'cos_min_ratio': 0.1, 'warmup_num_steps': 14811, 'total_num_steps': 148110}}}}
[Hydra] Augmenter를 생성합니다.
[MRAug] max_epochs :  30
{'_target_': 'utils.augmentations.mraugmenter.MRAugmenter', 'aug_on': True, 'aug_strength': 0.7, 'aug_delay': 5, 'weight_dict': {'fliph': 0.5, 'flipv': 0.5, 'rotate': 0.25, 'scale': 0.5, 'shift': 0.2, 'shear': 0.5}, 'aug_schedule_mode': 'epoch', 'aug_schedule_type': 'ramp', 'max_epochs': 30, 'val_loss_window_size': 5, 'val_loss_grad_start': -0.05, 'val_loss_grad_plateau': -0.001, 'aug_exp_decay': 6.0, 'max_rotation_angle': 15.0, 'scale_range': [0.85, 1.15], 'shift_extent': 5.0, 'max_shear_angle': 10.0}
[Hydra] mask_augmenter :  True
[Mask Aug] max_epochs :  30
{'enable': True, '_target_': 'utils.augmentations.maskaugmenter.MaskAugmenter', 'aug_on': True, 'aug_strength': 0.7, 'aug_delay': 5, 'aug_schedule_mode': 'epoch', 'aug_schedule_type': 'ramp', 'max_epochs': 30, 'val_loss_window_size': 5, 'val_loss_grad_start': -0.05, 'val_loss_grad_plateau': -0.001, 'aug_exp_decay': 6.0, 'mask_specs': {'equispaced': {'prob': 0.4, 'accel': [4, 8], 'cf': [0.07, 0.1]}, 'equispaced_fraction': {'prob': 0.3, 'accel': [4, 8], 'cf': [0.07, 0.1]}, 'random': {'prob': 0.2, 'accel': [4, 8], 'cf': [0.07, 0.1]}, 'magic_fraction': {'prob': 0.1, 'accel': [4, 8], 'cf': [0.07, 0.1]}}, 'allow_any_combination': True}
[Resume] None
/home/swpants05/Desktop/2025_FastMri/Data/train
/home/swpants05/Desktop/2025_FastMri/Data/val
[Hydra-eval] {'enable': True, 'every_n_epochs': 1, 'batch_size': 1, 'leaderboard_root': '/home/swpants05/Desktop/2025_FastMri/Data/leaderboard/', 'output_key': 'reconstruction'}
[Hydra-eval] lb_enable=True, lb_every=1
Epoch # 0 ............... fivarnet_test ...............
Epoch[ 0/30]/:   0%|                         | 0/9874 [00:00<?, ?it/s]/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/utils/model/feature_varnet/blocks.py:197: UserWarning: where received a uint8 condition tensor. This behavior is deprecated and will be removed in a future version of PyTorch. Use a boolean condition instead. (Triggered internally at ../aten/src/ATen/native/TensorCompare.cpp:530.)
  torch.where(
Traceback (most recent call last):                                    
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/main.py", line 124, in <module>
    main()
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/main.py", line 117, in main
    train(args)   # utils.learning.train_part.train 호출 :contentReference[oaicite:2]{index=2}
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/utils/learning/train_part.py", line 579, in train
    train_loss, train_time = train_epoch(args, epoch, model,
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/utils/learning/train_part.py", line 111, in train_epoch
    scaler.scale(loss).backward()
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/_tensor.py", line 525, in backward
    torch.autograd.backward(
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/autograd/__init__.py", line 267, in backward
    _engine_run_backward(
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/autograd/graph.py", line 744, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/main.py", line 124, in <module>
    main()
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/swpants05/.local/lib/python3.10/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/main.py", line 117, in main
    train(args)   # utils.learning.train_part.train 호출 :contentReference[oaicite:2]{index=2}
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/utils/learning/train_part.py", line 579, in train
    train_loss, train_time = train_epoch(args, epoch, model,
  File "/home/swpants05/Desktop/2025_FastMri/2025_GeekSeek/utils/learning/train_part.py", line 111, in train_epoch
    scaler.scale(loss).backward()
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/_tensor.py", line 525, in backward
    torch.autograd.backward(
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/autograd/__init__.py", line 267, in backward
    _engine_run_backward(
  File "/home/swpants05/.local/lib/python3.10/site-packages/torch/autograd/graph.py", line 744, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
